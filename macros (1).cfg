#####################################################################
# 	Homing
#####################################################################
[homing_override]
axes: z
set_position_z: 0
gcode:
    G90
    G0 Z5 F500
    # G28 X0 Y0 needs to home individually with sensorless homing
    # Set X feedrate to a low value
    G28 Y0
    G28 X0
    G0 X125 Y100 F9000
    G28 Z0 F1000
    G0 Z50

#####################################################################
# 	Start - End - Cancel - Pause
#####################################################################

[gcode_macro PRINT_START]
#   Use PRINT_START for the slicer starting script - please customise for your slicer of choice
gcode:
    {% set BED_TEMP = params.BED_TEMP|default(60)|float %}
    {% set EXTRUDER_TEMP = params.EXTRUDER_TEMP|default(150)|float %}
    {% set Z_OFFSET = params.Z_OFFSET|default(0)|float %}

#    STOP_LED_EFFECTS

#    SET_LED_EFFECT EFFECT=heating

    M104 S{params.EXTRUDER_TEMP|float*0.8}
    # Start bed heating
    M190 S{BED_TEMP}
    # Set and wait for nozzle to reach temperature
    M109 S{params.EXTRUDER_TEMP|float*0.8}

#    LED_PRINTING

    # Use absolute coordinates
    G90
    # Reset the G-Code Z offset (adjust Z offset if needed)
    SET_GCODE_OFFSET Z={Z_OFFSET} #0.0
    M220 S100 #Reset Speed
    M221 S100 #Reset Extrusion

 G32   #Home All Axes

    M109 S{EXTRUDER_TEMP}

   ## NOZZLE_CLEAN
    G1 Z20 F3000                   ; move nozzle away from bed 

    PURGE_LINE
[gcode_macro PRINT_END]
#   Use PRINT_END for the slicer ending script - please customise for your slicer of choice
gcode:

    M400                           ; wait for buffer to clear
    G92 E0                         ; zero the extruder
    G1 E-2.0 F3600                 ; retract filament
    G91                            ; relative positioning
    G0 Z1.00 F2000    ; move nozzle to remove stringing
    TURN_OFF_HEATERS
    M107                           ; turn off fan
    G1 Z2 F3000                    ; move nozzle up 2mm
    G90                            ; absolute positioning

    G1 X0 Y215 F2000           ; park nozzle at back

[gcode_macro CANCEL_PRINT]
rename_existing: BASE_CANCEL_PRINT
gcode:
    {% set x = params.x|default(215) %}
  {% set y = params.y|default(215) %}
  {% set z = params.z|default(10) %}
    SDCARD_RESET_FILE
    PRINT_END
[gcode_macro PURGE_LINE]
gcode:
    #Get Nozzle diameter and filament width for conditioning
    {% set NOZZLE = printer.configfile.settings.extruder.nozzle_diameter|default(0.4)|float %} #0.6
    {% set FILADIA = printer.configfile.settings.extruder.filament_diameter|default(1.75)|float %} #1.75

    #Set Start coordinates of priming lines
    {% set X_START = 5|default(5)|float %} #5
    {% set Y_START = 5|default(5)|float %} #5

    {% set X_MAX = printer.toolhead.axis_maximum.x|default(215)|float %} #350
    {% set Y_MAX = printer.toolhead.axis_maximum.y|default(215)|float %} #350
    {% set Z_MAX = printer.toolhead.axis_maximum.z|default(250)|float %} #320

    #Calculate Primer line extrusion volume and filament length
    {% set PRIMER_WIDTH = 0.4 * NOZZLE %} # 0.4    
    {% set PRIMER_HEIGHT = 0.42 * NOZZLE %} #0.42
    {% set PRIMER_SECT = PRIMER_WIDTH * PRIMER_HEIGHT %} #0.168
    {% set PRIMER_VOL = PRIMER_SECT * (X_MAX - 3 * X_START) %} # 56.28
    {% set FILAMENT_SECT = 3.1415 * ( FILADIA / 2.0)**2 %} # 2.4052109375
    {% set FILAMENT_LENGTH = 1.55 * PRIMER_VOL / FILAMENT_SECT %} #36,268752415815921

    #action_respond_info( "Purge line für {NOZZLE} mit einer Hoehe von {PRIMER_HEIGHT}")


    {% if printer.extruder.can_extrude|lower == 'true' %}
      G90
  
      # Reset extruder
      G92 E0
      # Priming
      G1 X{X_START} Y{Y_START} Z{PRIMER_HEIGHT} F6000.0
      G1 X{X_MAX - 2 * X_START} Y{Y_START} Z{PRIMER_HEIGHT} E{FILAMENT_LENGTH} F2000.0
      G1 X{X_MAX - 2 * X_START} Y{Y_START + PRIMER_WIDTH} Z{PRIMER_HEIGHT}
      G1 X{X_START} Y{Y_START + PRIMER_WIDTH} Z{PRIMER_HEIGHT} E{FILAMENT_LENGTH} F2000.0
      # Reset extruder
      G92 E0
  
      G1 Z2.0 F600        
      G1 Z0.8 F600        
      G1 Z2.0 F600
   {% else %}
      {action_respond_info("Extruder nicht heiss genug")}
   {% endif %}
[gcode_macro G32]
gcode:
    ### Variablen holen
#    {% set svv = printer.save_variables.variables %}
# printer['gcode_macro G32'] <--- so heisst das objekt wenn ein gcode macro da ist.....
#[gcode_macro Attach_Probe]
#[gcode_macro Dock_Probe]

    ### Homen aller Achsen
    {% if printer.toolhead.homed_axes != 'xyz' %}
    M117 Home alle Achsen
    G28 XY
    {% if printer['gcode_macro Attach_Probe'] %}
    Attach_Probe
    {% endif %}
    G28 Z
    {% endif %}
    #### Quad Gantry Level für 4 Z Motoren
    {% if printer.quad_gantry_level and not printer.quad_gantry_level.applied %}
    M117 4 Achsen Z Ausgleich
    {% if printer['gcode_macro Attach_Probe'] %}
    Attach_Probe
    {% endif %}
    QUAD_GANTRY_LEVEL
    G28 Z
    {% endif %}
    ### Z Tilt für 2 Z Motoren
    {% if printer.z_tilt and not printer.z_tilt.applied %}
    M117 2 Achsen Z Ausgleich
    {% if printer['gcode_macro Attach_Probe'] %}
    Attach_Probe
    {% endif %}
    Z_TILT_ADJUST
    G28 Z
    {% endif %}
    ### Bed Mesh
    {% if printer.bed_mesh and not printer.bed_mesh.profile_name %} # and printer.heater_bed.temperature != ssv.mesh_temp %}
    M117 Bed Mesh
    BED_MESH_CLEAR
    BED_MESH_CALIBRATE METHOD=automatic
#    SAVE_VARIABLE VARIABLE=mesh_temp VALUE=printer.heater_bed.temperature
    {% endif %}

    {% if printer['gcode_macro Dock_Probe'] %}
    Dock_Probe
    {% endif %}

    M117 Drucke...

    G90
    G0 X{printer.toolhead.axis_maximum.x /2} Y{printer.toolhead.axis_maximum.y /2} Z30 F20000
[gcode_macro PAUSE]
rename_existing: BASE_PAUSE
  {% set x = params.x|default(215) %}
  {% set y = params.y|default(215) %}
  {% set z = params.z|default(10) %}
gcode:
    SAVE_GCODE_STATE NAME=PAUSE_state
    BASE_PAUSE
    G91
    G1 E-1.7 F2100
    G1 Z{Z}
    G90
    G1 X{X} Y{Y} F6000
    G91
[gcode_macro RESUME]
rename_existing: BASE_RESUME
gcode:
    {% set E = params.E|default(1)|int %}
    G91
    G1 E{E} F2100
    G90
    RESTORE_GCODE_STATE NAME=PAUSE_state MOVE=1
    BASE_RESUME
[gcode_macro DISABLE_MOTORS]
gcode:
    M18

[gcode_macro SET_PLATE_OFFSET]
gcode:
    SET_GCODE_OFFSET Z=-0.955

[gcode_macro PRINT_END]
gcode:
    M221 S100
    M104 S0 ; turn off temperature
    M140 S0 ; turn off heatbed
    M107 ; turn off fan 
    # Raise nozzle by 10mm
    G91
    G1 Z10 F8000
    G90
    G1 X0 Y222 E-3 F8000
    M84 ; disable motors
    M117 VS.027       ~voron~


[gcode_macro M900]
gcode:
  {% if 'K' in params %}
    {% if 'E' in params %}
      SET_PRESSURE_ADVANCE EXTRUDER={params.E} ADVANCE={params.K}
    {% else %}
      SET_PRESSURE_ADVANCE ADVANCE={params.K}
    {% endif %}
  {% endif %}
#[gcode_macro TOGGLE_CASELIGHT]
#gcode:
#  SET_PIN PIN=caselight VALUE={(not printer['output_pin caselight'].value)|int}
